---
# tasks file for roles/ansible-role-adauth

- name: Install Kerberos and sssd-clients
  yum: name={{ item }} state=present
  with_items:
    - adcli
    - sssd-krb5
    - sssd-ldap
    - krb5-workstation

# krb5.conf
- name: Configure Kerberos integration with AD
  template: src=krb5.conf.j2 dest=/etc/krb5.conf
            owner=root group=root mode=644

# this runs locally on the node where ansible is running. Use with ansible-pull only
#- name: check if local /etc/krb5.keytab exists
#  local_action: stat path="/etc/krb5.keytab"
#  register: krb5_keytab

# Check if node's keytab is already present
- name: check if local /etc/krb5.keytab exists
  stat: path="/etc/krb5.keytab"
  register: krb5_keytab

- name: check if host/krb5.keytab exists on network direcotory
  local_action: stat path="{{ keytab_root_dir }}/{{ inventory_hostname }}/krb5.keytab"
  register: network_krb5_keytab
  when: krb5_keytab.stat.exists == False

- name: Copy the keytab from network share 
  copy: src={{ keytab_root_dir }}/{{ inventory_hostname }}/krb5.keytab dest=/etc/krb5.keytab
  when: (krb5_keytab.stat.exists == False and network_krb5_keytab.stat.exists == True )

- name: Generate new keytab and copy that to network share
  command: adcli join -D {{ adauth_realm | lower }} --one-time-password={{ adauth_one_time_password }} -O "{{ ad_organization_unit }}"
  when: (krb5_keytab.stat.exists == False and network_krb5_keytab.stat.exists == False )
  notify: copy keytab

# sssd
- name: Configure sssd integration with AD
  template: src=sssd.conf.j2 dest=/etc/sssd/sssd.conf
            owner=root group=root mode=644
  notify: restart_sssd

- name: sssd enabled and running
  service:
    name: "{{ sssd_service }}"
    enabled: true
    state: running

# actual configuration for NSS and PAM should be in another module to allow flexibility with other authentication methods